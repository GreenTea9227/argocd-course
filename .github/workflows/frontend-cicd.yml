name: "[FRONTEND] Build"
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "`x.y.z-build.NN` 형태로 버전을 입력해주세요. (ex. 0.1.0-build.05)"
        required: true
        default: 0.0.1-build.00
env:
  TAG: ${{ github.event.inputs.tag }}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
 
permissions:
  id-token: write

jobs:
  condition_check:
    runs-on: ubuntu-latest
    steps:
      - name: check tag format
        run: |
          if [[ !(${{ env.TAG }} =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\-build\.[0-9]{2}$) ]];
          then
            echo "You entered an incorrect tag format."
            exit 1
          fi
      - name: notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack
  tagging:
    needs: condition_check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
            token: ${{ secrets.PAT_TOKEN }}
      - name: Create Tag
        run: |
          git tag ${{ env.TAG }}
          git push origin ${{ env.TAG }}
      - name: notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack
  build:
    needs: tagging
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Move Python Sample code
        run: |
          mv sample/humancat-frontend/* ./
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
          aws-region: ap-northeast-2
          role-session-name: GithubActionSession
      - id: build-image
        name: Build and Tag Image
        env:
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.TAG }}
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
      - id: login-ecr
        name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - id: push-image-to-aws-ecr
        name: Push image to Amazon ECR
        env:
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.TAG }}
        run: |
          docker push $ECR_REPOSITORY:$IMAGE_TAG
      - name: Notice when job fails
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack
  